"""Initial migration

Revision ID: a9e35e4e4f8c
Revises: 
Create Date: 2021-04-27 01:17:32.710484

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a9e35e4e4f8c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('tx_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('received', sa.BigInteger(), server_default='0', nullable=False),
    sa.Column('spent', sa.BigInteger(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('address')
    )
    op.create_table('blocks',
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=False),
    sa.Column('prev_hash', sa.String(length=64), nullable=False),
    sa.Column('merkle_root', sa.String(length=64), nullable=False),
    sa.Column('witness_root', sa.String(length=64), nullable=False),
    sa.Column('tree_root', sa.String(length=64), nullable=False),
    sa.Column('reserved_root', sa.String(length=64), nullable=False),
    sa.Column('time', sa.Integer(), nullable=False),
    sa.Column('bits', sa.Integer(), nullable=False),
    sa.Column('nonce', sa.BigInteger(), nullable=False),
    sa.Column('extra_nonce', sa.String(), nullable=False),
    sa.Column('mask', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('height')
    )
    op.create_index(op.f('ix_blocks_hash'), 'blocks', ['hash'], unique=True)
    op.create_table('entity_counts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('opened_names', sa.Integer(), server_default='0', nullable=False),
    sa.Column('txs', sa.Integer(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('info_ticks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hashrate', sa.Numeric(precision=32, scale=8), nullable=False),
    sa.Column('difficulty', sa.Numeric(precision=32, scale=8), nullable=False),
    sa.Column('created_at', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mempool_txs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=False),
    sa.Column('first_seen', sa.Integer(), nullable=False),
    sa.Column('aggregate_value', sa.BigInteger(), nullable=False),
    sa.Column('fee', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mempool_txs_hash'), 'mempool_txs', ['hash'], unique=True)
    op.create_table('names',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=False),
    sa.Column('views', sa.Integer(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('hash')
    )
    op.create_table('price_ticks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price_usd', sa.BigInteger(), nullable=False),
    sa.Column('market_cap_usd', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('txs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('block_height', sa.Integer(), nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=False),
    sa.Column('witness_hash', sa.String(length=64), nullable=False),
    sa.Column('fee', sa.Integer(), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=False),
    sa.Column('mtime', sa.Integer(), nullable=False),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('locktime', sa.Integer(), nullable=False),
    sa.Column('hex', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['block_height'], ['blocks.height'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash')
    )
    op.create_index(op.f('ix_txs_block_height'), 'txs', ['block_height'], unique=False)
    op.create_index(op.f('ix_txs_mtime'), 'txs', ['mtime'], unique=False)
    op.create_table('outputs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('block_height', sa.Integer(), nullable=False),
    sa.Column('tx_hash', sa.String(length=64), nullable=False),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('value', sa.BigInteger(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('covenant_type', sa.Integer(), nullable=False),
    sa.Column('covenant_action', sa.String(), nullable=False),
    sa.Column('covenant_items', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('covenant_name_hash', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['block_height'], ['blocks.height'], ),
    sa.ForeignKeyConstraint(['covenant_name_hash'], ['names.hash'], ),
    sa.ForeignKeyConstraint(['tx_hash'], ['txs.hash'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tx_hash', 'index')
    )
    op.create_index(op.f('ix_outputs_address'), 'outputs', ['address'], unique=False)
    op.create_index(op.f('ix_outputs_block_height'), 'outputs', ['block_height'], unique=False)
    op.create_index(op.f('ix_outputs_covenant_action'), 'outputs', ['covenant_action'], unique=False)
    op.create_index(op.f('ix_outputs_covenant_name_hash'), 'outputs', ['covenant_name_hash'], unique=False)
    op.create_index(op.f('ix_outputs_index'), 'outputs', ['index'], unique=False)
    op.create_index(op.f('ix_outputs_tx_hash'), 'outputs', ['tx_hash'], unique=False)
    op.create_table('inputs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tx_hash', sa.String(length=64), nullable=False),
    sa.Column('index', sa.BigInteger(), nullable=False),
    sa.Column('prevout_hash', sa.String(length=64), nullable=True),
    sa.Column('prevout_index', sa.Integer(), nullable=True),
    sa.Column('prevout_address', sa.String(), nullable=True),
    sa.Column('coinbase', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['prevout_hash', 'prevout_index'], ['outputs.tx_hash', 'outputs.index'], ),
    sa.ForeignKeyConstraint(['tx_hash'], ['txs.hash'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inputs_prevout_address'), 'inputs', ['prevout_address'], unique=False)
    op.create_index(op.f('ix_inputs_tx_hash'), 'inputs', ['tx_hash'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_inputs_tx_hash'), table_name='inputs')
    op.drop_index(op.f('ix_inputs_prevout_address'), table_name='inputs')
    op.drop_table('inputs')
    op.drop_index(op.f('ix_outputs_tx_hash'), table_name='outputs')
    op.drop_index(op.f('ix_outputs_index'), table_name='outputs')
    op.drop_index(op.f('ix_outputs_covenant_name_hash'), table_name='outputs')
    op.drop_index(op.f('ix_outputs_covenant_action'), table_name='outputs')
    op.drop_index(op.f('ix_outputs_block_height'), table_name='outputs')
    op.drop_index(op.f('ix_outputs_address'), table_name='outputs')
    op.drop_table('outputs')
    op.drop_index(op.f('ix_txs_mtime'), table_name='txs')
    op.drop_index(op.f('ix_txs_block_height'), table_name='txs')
    op.drop_table('txs')
    op.drop_table('price_ticks')
    op.drop_table('names')
    op.drop_index(op.f('ix_mempool_txs_hash'), table_name='mempool_txs')
    op.drop_table('mempool_txs')
    op.drop_table('info_ticks')
    op.drop_table('entity_counts')
    op.drop_index(op.f('ix_blocks_hash'), table_name='blocks')
    op.drop_table('blocks')
    op.drop_table('addresses')
    # ### end Alembic commands ###
